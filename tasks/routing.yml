---
- name: config hostname and kernel routing 
  shell: |
    myhostname={{ inventory_hostname }}
    systemctl stop NetworkManager
    hostname $myhostname
    echo 1 >/proc/sys/net/ipv4/ip_forward
    num=$(echo $myhostname | sed -r -n "s/demo([0-9]+)/\1/p")
    ip add add 192.168.$(($num - 1)).$num/24 dev eth1
    ip add add 192.168.$num.$num/24 dev eth2
    ip link set up dev eth1
    ip link set up dev eth2
    max={{ vm_num }}
    for (( j=0; j<=max; j++ ))
    do
      if (( j < num-1 )); then
        route add -net 192.168.$j.0 netmask 255.255.255.0 gw 192.168.$((num - 1)).$((num - 1))
      fi
      if (( j > num )); then
        route add -net 192.168.$j.0 netmask 255.255.255.0 gw 192.168.$num.$((num + 1))
      fi
    done
    if ((num % 2)); then
      arp -s 192.168.$((num-1)).100 {{ traffic_src_mac }}
      arp -s 192.168.$num.100 {{ traffic_dst_mac }}
    else
      arp -s 192.168.$((num-1)).100 {{ traffic_dst_mac }}
      arp -s 192.168.$num.100 {{ traffic_src_mac }}
    fi
    /bin/true
  when: routing != "vpp"
- name: config hostname and VPP routing
  shell: |
    myhostname={{ inventory_hostname }}
    systemctl stop NetworkManager
    hostname $myhostname
    num=$(echo $myhostname | sed -r -n "s/demo([0-9]+)/\1/p")
    max={{ vm_num }}
    for ifname in eth1 eth2
    do
      if ! ip link show $ifname > /dev/null; then
        continue
      fi
      businfo=`ethtool -i $ifname | grep 'bus-info' | awk '{print $2}'`
      ifconfig $ifname down
      sleep 1
      dpdk-devbind -u $ifname
      sleep 1
      dpdk-devbind -b uio_pci_generic $businfo
    done
    systemctl stop vpp; systemctl start vpp
    vppctl set interface state GigabitEthernet0/4/0 up
    vppctl set interface state GigabitEthernet0/5/0 up
    vppctl set interface ip address GigabitEthernet0/4/0 192.168.$((num-1)).$num/24
    vppctl set interface ip address GigabitEthernet0/5/0 192.168.$num.$num/24
    for (( j=0; j<=max; j++ ))
    do
      if (( j < num-1 )); then
        vppctl ip route add 192.168.$j.0/24  via 192.168.$((num - 1)).$((num - 1)) GigabitEthernet0/4/0
      fi
      if (( j > num )); then
         vppctl ip route add 192.168.$j.0/24 via 192.168.$num.$((num + 1)) GigabitEthernet0/5/0
      fi
    done
    if ((num % 2)); then
      vppctl set ip arp static GigabitEthernet0/4/0 192.168.$((num-1)).100 {{ traffic_src_mac }}
      vppctl set ip arp static GigabitEthernet0/5/0 192.168.$num.100 {{ traffic_dst_mac }}
    else
      vppctl set ip arp static GigabitEthernet0/4/0 192.168.$((num-1)).100 {{ traffic_dst_mac }}
      vppctl set ip arp static GigabitEthernet0/5/0 192.168.$num.100 {{ traffic_src_mac }}
    fi
  when: routing == "vpp"

